<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">

    <title>OpenStreetMap-Rudolf-submission</title>
    <link rel="shortcut icon" type="image/x-icon" href="http://localhost:8888/static/base/images/favicon.ico?v=30780f272ab4aac64aa073a841546240">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/jquery-ui.css" type="text/css">
    <link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/jquery.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    


<script type="text/javascript" src="OpenStreetMap-Rudolf-submission_files/MathJax.js" charset="utf-8"></script>

<script type="text/javascript">
// MathJax disabled, set as null to distingish from *missing* MathJax,
// where it will be undefined, and should prompt a dialog later.
window.mathjax_url = "/static/components/MathJax/MathJax.js";
</script>

<link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/bootstrap-tour.css" type="text/css">
<link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/codemirror.css">


    <link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/style.css" type="text/css">
    

<link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/override.css" type="text/css">
<link rel="stylesheet" href="" id="kernel-css" type="text/css">


    <link rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/custom.css" type="text/css">
    <script src="OpenStreetMap-Rudolf-submission_files/promise.js" type="text/javascript" charset="utf-8"></script>
    <script src="OpenStreetMap-Rudolf-submission_files/require.js" type="text/javascript" charset="utf-8"></script>
    <script>
      require.config({
          
          urlArgs: "v=20170228092940",
          
          baseUrl: '/static/',
          paths: {
            'auth/js/main': 'auth/js/main.min',
            custom : '/custom',
            nbextensions : '/nbextensions',
            kernelspecs : '/kernelspecs',
            underscore : 'components/underscore/underscore-min',
            backbone : 'components/backbone/backbone-min',
            jquery: 'components/jquery/jquery.min',
            bootstrap: 'components/bootstrap/js/bootstrap.min',
            bootstraptour: 'components/bootstrap-tour/build/js/bootstrap-tour.min',
            'jquery-ui': 'components/jquery-ui/ui/minified/jquery-ui.min',
            moment: 'components/moment/moment',
            codemirror: 'components/codemirror',
            termjs: 'components/term.js/src/term',
            typeahead: 'components/jquery-typeahead/dist/jquery.typeahead'
          },
	  map: { // for backward compatibility
	    "*": {
		"jqueryui": "jquery-ui",
	    }
	  },
          shim: {
            typeahead: {
              deps: ["jquery"],
              exports: "typeahead"
            },
            underscore: {
              exports: '_'
            },
            backbone: {
              deps: ["underscore", "jquery"],
              exports: "Backbone"
            },
            bootstrap: {
              deps: ["jquery"],
              exports: "bootstrap"
            },
            bootstraptour: {
              deps: ["bootstrap"],
              exports: "Tour"
            },
            "jquery-ui": {
              deps: ["jquery"],
              exports: "$"
            }
          },
          waitSeconds: 30,
      });

      require.config({
          map: {
              '*':{
                'contents': 'services/contents',
              }
          }
      });

      define("bootstrap", function () {
          return window.$;
      });

      define("jquery", function () {
          return window.$;
      });

      define("jqueryui", function () {
          return window.$;
      });

      define("jquery-ui", function () {
          return window.$;
      });
      // error-catching custom.js shim.
      define("custom", function (require, exports, module) {
          try {
              var custom = require('custom/custom');
              console.debug('loaded custom.js');
              return custom;
          } catch (e) {
              console.error("error loading custom.js", e);
              return {};
          }
      })
    </script>

    
    

<script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="services/contents" src="OpenStreetMap-Rudolf-submission_files/contents.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="custom/custom" src="OpenStreetMap-Rudolf-submission_files/custom.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_anacondacloud/main" src="OpenStreetMap-Rudolf-submission_files/main.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_conda/main" src="OpenStreetMap-Rudolf-submission_files/main_002.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/jupyter-js-widgets/extension" src="OpenStreetMap-Rudolf-submission_files/extension.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nbpresent/js/nbpresent.min" src="OpenStreetMap-Rudolf-submission_files/nbpresent.js"></script><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_conda/models" src="OpenStreetMap-Rudolf-submission_files/models.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_conda/views" src="OpenStreetMap-Rudolf-submission_files/views.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_conda/urls" src="OpenStreetMap-Rudolf-submission_files/urls.js"></script><link id="nbp-css" rel="stylesheet" href="OpenStreetMap-Rudolf-submission_files/nbpresent.css"><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbpresent-deps" src="OpenStreetMap-Rudolf-submission_files/nbpresent_002.js"></script><style type="text/css">.MathJax_Display {text-align: center; margin: 0; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; height: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width: 1px; height: 60em; min-height: 0; max-height: none}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Blank; src: url('about:blank')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.widget-modal-backdrop{position:absolute;left:0;top:0;width:100%;height:100%;background:#000;z-index:999;opacity:.5;display:flex;align-items:center;justify-content:center;flex-direction:column}.widget-modal-backdrop.widget-modal-hidden{display:none}.widget-modal-backdrop.widget-modal-hide{animation:fadeout .25s}.widget-modal-backdrop.widget-modal-show{animation:fadein .25s}@keyframes fadein{from{opacity:0}to{opacity:.5}}@keyframes fadeout{from{opacity:.5}to{opacity:0}}.widget-modal-text{color:#fff;font-size:x-large;font-weight:700}.widget-modal-text div,.widget-modal-text i{display:inline}.widget-modal-text div{padding-left:1ex}.widget-modal-progress{width:300px}.jupyter-widgets{margin:2px}.jupyter-widgets.widget-container{margin:0}.widget-area{page-break-inside:avoid;-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch}.widget-area .widget-subarea{padding:.4em 0;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-webkit-box-flex:2;-moz-box-flex:2;box-flex:2;flex:2;-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch}.widget-area.connection-problems .prompt:after{content:"\F127";font-family:FontAwesome;color:#d9534f;top:3px;padding:3px}.slide-track{border:1px solid #CCC;background:#FFF;border-radius:2px}.widget-hslider{width:300px}.widget-hslider .slider-container{padding-left:8px;padding-right:2px;overflow:visible;flex-grow:1;height:5px;max-height:5px;margin-top:15px;margin-bottom:12px;border:1px solid #CCC;background:#FFF;border-radius:2px;-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch}.widget-hslider .slider-container .ui-slider{-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch;-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;flex:1;border:0;background:0 0}.widget-hslider .slider-container .ui-slider .ui-slider-handle{width:12px;height:28px;margin-top:-8px;border-radius:2px}.widget-hslider .slider-container .ui-slider .ui-slider-range{height:12px;margin-top:-4px}.widget-vslider{width:50px;height:250px}.widget-vslider .slider-container{padding-bottom:5px;overflow:visible;flex-grow:1;width:5px;max-width:5px;margin-left:auto;margin-right:auto;border:1px solid #CCC;background:#FFF;border-radius:2px;-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch}.widget-vslider .slider-container .ui-slider{-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch;-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;flex:1;border:0;background:0 0;margin-left:-4px;margin-top:5px}.widget-vslider .slider-container .ui-slider .ui-slider-handle{width:28px;height:12px;margin-left:-9px;border-radius:2px}.widget-vslider .slider-container .ui-slider .ui-slider-range{width:12px;margin-left:-1px}.widget-colorpicker{width:300px;display:flex}.widget-colorpicker.short{width:148px}.widget-colorpicker .input-group{flex-grow:1}.jupyter-button{width:148px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.jupyter-button.btn,.jupyter-button.btn.hover,.jupyter-button.btn:active,.jupyter-button.btn:focus{outline:0!important}.jupyter-button.btn:active{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2)}.widget-checkbox{width:148px}.widget-button,.widget-toggle-button{box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);width:148px;height:32px}.widget-button.btn,.widget-button.btn.hover,.widget-button.btn:active,.widget-button.btn:focus,.widget-toggle-button.btn,.widget-toggle-button.btn.hover,.widget-toggle-button.btn:active,.widget-toggle-button.btn:focus{outline:0!important}.widget-button.btn:active,.widget-toggle-button.btn:active{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2)}.widget-play{width:148px;display:flex;justify-content:space-between}.widget-play button{height:32px;width:48px}.widget-toggle-button{width:148px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.widget-toggle-button.btn,.widget-toggle-button.btn.hover,.widget-toggle-button.btn:active,.widget-toggle-button.btn:focus,.widget-toggle-buttons .btn,.widget-toggle-buttons .btn.hover,.widget-toggle-buttons .btn:active,.widget-toggle-buttons .btn:focus{outline:0!important}.widget-toggle-buttons .btn.active{box-shadow:none!important}.widget-toggle-buttons .btn-group{box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.widget-text{width:300px}.widget-textarea{width:300px}.widget-listbox{width:300px}.widget-select-multiple{width:300px}.widget-select-multiple select.form-control{margin-left:0;margin-right:0}.widget-dropdown{width:300px}.widget-dropdown .widget_item{display:flex;flex-grow:1}.widget-dropdown .widget-combo-btn{flex-grow:1;min-width:10px}.widget-dropdown .dropdown-menu{max-height:200px;overflow:hidden;overflow-y:auto;width:calc(275px)}.widget-hprogress{width:300px;height:32px}.widget-hprogress .progress{flex-grow:1;margin-top:auto;margin-bottom:auto}.widget-hprogress .progress-bar{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}.widget-vprogress{height:250px;width:50px}.widget-vprogress .progress{flex-grow:1;width:12px;margin-left:auto;margin-right:auto;margin-bottom:0}.widget-vprogress .progress-bar{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}.widget-combo-btn{min-width:123px}.widget_item .dropdown-menu li a{color:inherit}.widget-valid{margin:8px 5px 16px}.widget-hbox{-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch}.widget-hbox input[type=checkbox]{margin-top:10px;margin-bottom:10px}.widget-hbox input[type=color]{height:32px;width:28px;padding:1px}.widget-hbox .widget-label{min-width:10ex;max-width:10ex;padding-right:8px;padding-top:5px;text-align:right;vertical-align:text-top;word-wrap:break-word}.widget-hbox .widget-readout{padding-left:4px;padding-top:5px;height:32px;text-align:center;vertical-align:text-top;min-width:7em;max-width:7em;margin-left:3px;overflow:hidden;white-space:nowrap}.widget-hbox .widget-readout.overflow{-webkit-box-shadow:0 0 0 1px rgba(77,0,0,.15);-moz-box-shadow:0 0 0 1px rgba(77,0,0,.15);box-shadow:0 0 0 1px rgba(77,0,0,.15)}.widget-vbox{-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch}.widget-vbox input[type=color]{height:32px;padding:1px}.widget-vbox .widget-label{padding-bottom:5px;text-align:center;vertical-align:text-bottom}.widget-vbox .widget-readout{padding-top:5px;white-space:nowrap;text-align:center;vertical-align:text-top;margin-top:4px;overflow:hidden}.widget-vbox .widget-readout.overflow{-webkit-box-shadow:0 0 0 1px rgba(77,0,0,.15);-moz-box-shadow:0 0 0 1px rgba(77,0,0,.15);box-shadow:0 0 0 1px rgba(77,0,0,.15)}.widget-box{box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-webkit-box-align:start;-moz-box-align:start;box-align:start;align-items:flex-start}.widget-radio-box{-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding-top:4px}.widget-radio-box label{margin-top:2px;margin-bottom:2px;margin-left:22px}/*# sourceMappingURL=widgets.min.css.map */</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_conda/common" src="OpenStreetMap-Rudolf-submission_files/common.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbpresent-notebook" src="OpenStreetMap-Rudolf-submission_files/nbpresent_003.js"></script><link rel="stylesheet" type="text/css" href="OpenStreetMap-Rudolf-submission_files/conda.css"><style type="text/css">@font-face {font-family: STIXMathJax_Main; src: url('http://localhost:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/woff/STIXMathJax_Main-Italic.woff?rev=2.6.0') format('woff'), url('http://localhost:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/otf/STIXMathJax_Main-Italic.otf?rev=2.6.0') format('opentype'); font-style: italic}
</style><style type="text/css">@font-face {font-family: STIXMathJax_Main; src: url('http://localhost:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/woff/STIXMathJax_Main-Regular.woff?rev=2.6.0') format('woff'), url('http://localhost:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/otf/STIXMathJax_Main-Regular.otf?rev=2.6.0') format('opentype')}
</style></head>

<body class="notebook_app  nbp-no-slides edit_mode" data-base-url="/" data-ws-url="" data-notebook-name="OpenStreetMap-Rudolf-submission.ipynb" data-notebook-path="Fortbildungen/Nanodegree_Data_Scientist/P3/OpenStreetMap/OpenStreetMap-Rudolf-submission.ipynb"><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px none; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"><br><br><br><br><br><br><br><br><br><br></div></div><div id="MathJax_Message" style="display: none;"></div>

<noscript>
    <div id='noscript'>
      Jupyter Notebook requires JavaScript.<br>
      Please enable it to proceed.
  </div>
</noscript>

<div id="header" style="display: block;">
  <div id="header-container" class="container">
  <div id="ipython_notebook" class="nav navbar-brand pull-left"><a href="http://localhost:8888/tree" title="dashboard"><img src="OpenStreetMap-Rudolf-submission_files/logo.png" alt="Jupyter Notebook"></a></div>

  
  
  

    <span id="login_widget">
      
    </span>

  

  

  


<span id="save_widget" class="pull-left save_widget">
    <span id="notebook_name" class="filename">OpenStreetMap-Rudolf-submission</span>
    <span class="checkpoint_status" title="Tue, Feb 28, 2017 11:52 AM">Last Checkpoint: a minute ago</span>
    <span class="autosave_status">(unsaved changes)</span>
</span>

<span id="kernel_logo_widget">
  
  <img class="current_kernel_logo" src="OpenStreetMap-Rudolf-submission_files/logo-64x64.png" style="display: inline;">
  
</span>


  </div>
  <div class="header-bar"></div>

  
<div id="menubar-container" class="container">
<div id="menubar">
    <div id="menus" class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <button type="button" class="btn btn-default navbar-btn navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
              <i class="fa fa-bars"></i>
              <span class="navbar-text">Menu</span>
            </button>
            <p id="kernel_indicator" class="navbar-text indicator_area">
              <span class="kernel_indicator_name">Python [conda root]</span>
              <i id="kernel_indicator_icon" class="kernel_idle_icon" title="Kernel Idle"></i>
            </p>
            <i id="readonly-indicator" class="navbar-text" title="This notebook is read-only" style="display: none;">
                <span class="fa-stack">
                    <i class="fa fa-save fa-stack-1x"></i>
                    <i class="fa fa-ban fa-stack-2x text-danger"></i>
                </span>
            </i>
            <i id="modal_indicator" class="navbar-text modal_indicator" title="Edit Mode"></i>
            <span id="notification_area"><div id="notification_kernel" class="notification_widget btn btn-xs navbar-btn undefined info" style="display: none;"><span title="click to reconnect"></span></div><div id="notification_notebook" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div><div id="notification_widgets" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div></span>
            <div class="navbar-collapse collapse">
              <ul class="nav navbar-nav">
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">File</a>
                    <ul id="file_menu" class="dropdown-menu">
                        <li id="new_notebook" class="dropdown-submenu">
                            <a href="#">New Notebook</a>
                            <ul class="dropdown-menu" id="menu-new-notebook-submenu"><li id="new-notebook-submenu-conda-root-py"><a href="#">Python [conda root]</a></li><li class="divider"></li><li id="new-notebook-submenu-python2"><a href="#">Python [default]</a></li></ul>
                        </li>
                        <li id="open_notebook" title="Opens a new window with the Dashboard view">
                            <a href="#">Open...</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="copy_notebook" title="Open a copy of this notebook's contents and start a new kernel">
                            <a href="#">Make a Copy...</a></li>
                        <li id="rename_notebook"><a href="#">Rename...</a></li>
                        <li id="save_checkpoint"><a href="#">Save and Checkpoint</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="restore_checkpoint" class="dropdown-submenu"><a href="#">Revert to Checkpoint</a>
                          <ul class="dropdown-menu"><li><a href="#">Tuesday, February 28, 2017 11:52 AM</a></li></ul>
                        </li>
                        <li class="divider"></li>
                        <li id="print_preview"><a href="#">Print Preview</a></li>
                        <li class="dropdown-submenu"><a href="#">Download as</a>
                            <ul class="dropdown-menu">
                                <li id="download_ipynb"><a href="#">Notebook (.ipynb)</a></li>
                                <li id="download_script"><a href="#">Python (.py)</a></li>
                                <li id="download_html"><a href="#">HTML (.html)</a></li>
                                <li id="download_markdown"><a href="#">Markdown (.md)</a></li>
                                <li id="download_rst"><a href="#">reST (.rst)</a></li>
                                <li id="download_pdf"><a href="#">PDF via LaTeX (.pdf)</a></li>
                            <li><a class="download_nbpresent">Presentation (.html)</a></li></ul>
                        </li>
                        <li class="divider"></li>
                        <li id="trust_notebook" title="Trust the output of this notebook" class="disabled">
                            <a href="#">Trusted Notebook</a></li>
                        <li class="divider"></li>
                        <li id="kill_and_exit" title="Shutdown this notebook's kernel, and close this window">
                            <a href="#">Close and Halt</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Edit</a>
                    <ul id="edit_menu" class="dropdown-menu">
                        <li id="cut_cell"><a href="#">Cut Cells</a></li>
                        <li id="copy_cell"><a href="#">Copy Cells</a></li>
                        <li id="paste_cell_above" class="disabled"><a href="#">Paste Cells Above</a></li>
                        <li id="paste_cell_below" class="disabled"><a href="#">Paste Cells Below</a></li>
                        <li id="paste_cell_replace" class="disabled"><a href="#">Paste Cells &amp; Replace</a></li>
                        <li id="delete_cell"><a href="#">Delete Cells</a></li>
                        <li id="undelete_cell" class="disabled"><a href="#">Undo Delete Cells</a></li>
                        <li class="divider"></li>
                        <li id="split_cell"><a href="#">Split Cell</a></li>
                        <li id="merge_cell_above"><a href="#">Merge Cell Above</a></li>
                        <li id="merge_cell_below"><a href="#">Merge Cell Below</a></li>
                        <li class="divider"></li>
                        <li id="move_cell_up"><a href="#">Move Cell Up</a></li>
                        <li id="move_cell_down"><a href="#">Move Cell Down</a></li>
                        <li class="divider"></li>
                        <li id="edit_nb_metadata"><a href="#">Edit Notebook Metadata</a></li>
                        <li class="divider"></li>
                        <li id="find_and_replace"><a href="#"> Find and Replace </a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">View</a>
                    <ul id="view_menu" class="dropdown-menu">
                        <li id="toggle_header" title="Show/Hide the logo and notebook title (above menu bar)">
                            <a href="#">Toggle Header</a></li>
                        <li id="toggle_toolbar" title="Show/Hide the action icons (below menu bar)">
                            <a href="#">Toggle Toolbar</a></li>
                        <li id="menu-cell-toolbar" class="dropdown-submenu">
                            <a href="#">Cell Toolbar</a>
                            <ul class="dropdown-menu" id="menu-cell-toolbar-submenu"><li data-name="None"><a href="#">None</a></li><li data-name="Edit%20Metadata"><a href="#">Edit Metadata</a></li><li data-name="Raw%20Cell%20Format"><a href="#">Raw Cell Format</a></li><li data-name="Slideshow"><a href="#">Slideshow</a></li></ul>
                        </li>
                    <li><a>Toggle Presentation</a></li></ul>
                </li>
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Insert</a>
                    <ul id="insert_menu" class="dropdown-menu">
                        <li id="insert_cell_above" title="Insert an empty Code cell above the currently active cell">
                            <a href="#">Insert Cell Above</a></li>
                        <li id="insert_cell_below" title="Insert an empty Code cell below the currently active cell">
                            <a href="#">Insert Cell Below</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Cell</a>
                    <ul id="cell_menu" class="dropdown-menu">
                        <li id="run_cell" title="Run this cell, and move cursor to the next one">
                            <a href="#">Run Cells</a></li>
                        <li id="run_cell_select_below" title="Run this cell, select below">
                            <a href="#">Run Cells and Select Below</a></li>
                        <li id="run_cell_insert_below" title="Run this cell, insert below">
                            <a href="#">Run Cells and Insert Below</a></li>
                        <li id="run_all_cells" title="Run all cells in the notebook">
                            <a href="#">Run All</a></li>
                        <li id="run_all_cells_above" title="Run all cells above (but not including) this cell">
                            <a href="#">Run All Above</a></li>
                        <li id="run_all_cells_below" title="Run this cell and all cells below it">
                            <a href="#">Run All Below</a></li>
                        <li class="divider"></li>
                        <li id="change_cell_type" class="dropdown-submenu" title="All cells in the notebook have a cell type. By default, new cells are created as 'Code' cells">
                            <a href="#">Cell Type</a>
                            <ul class="dropdown-menu">
                              <li id="to_code" title="Contents will be sent to the kernel for execution, and output will display in the footer of cell">
                                  <a href="#">Code</a></li>
                              <li id="to_markdown" title="Contents will be rendered as HTML and serve as explanatory text">
                                  <a href="#">Markdown</a></li>
                              <li id="to_raw" title="Contents will pass through nbconvert unmodified">
                                  <a href="#">Raw NBConvert</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="current_outputs" class="dropdown-submenu"><a href="#">Current Outputs</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_current_output" title="Hide/Show the output of the current cell">
                                    <a href="#">Toggle</a>
                                </li>
                                <li id="toggle_current_output_scroll" title="Scroll the output of the current cell">
                                    <a href="#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_current_output" title="Clear the output of the current cell">
                                    <a href="#">Clear</a>
                                </li>
                            </ul>
                        </li>
                        <li id="all_outputs" class="dropdown-submenu"><a href="#">All Output</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_all_output" title="Hide/Show the output of all cells">
                                    <a href="#">Toggle</a>
                                </li>
                                <li id="toggle_all_output_scroll" title="Scroll the output of all cells">
                                    <a href="#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_all_output" title="Clear the output of all cells">
                                    <a href="#">Clear</a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Kernel</a>
                    <ul id="kernel_menu" class="dropdown-menu">
                        <li id="int_kernel" title="Send KeyboardInterrupt (CTRL-C) to the Kernel">
                            <a href="#">Interrupt</a>
                        </li>
                        <li id="restart_kernel" title="Restart the Kernel">
                            <a href="#">Restart</a>
                        </li>
                        <li id="restart_clear_output" title="Restart the Kernel and clear all output">
                            <a href="#">Restart &amp; Clear Output</a>
                        </li>
                        <li id="restart_run_all" title="Restart the Kernel and re-run the notebook">
                            <a href="#">Restart &amp; Run All</a>
                        </li>
                        <li id="reconnect_kernel" title="Reconnect to the Kernel">
                            <a href="#">Reconnect</a>
                        </li>
                        <li class="divider"></li>
                        <li id="menu-change-kernel" class="dropdown-submenu">
                            <a href="#">Change kernel</a>
                            <ul class="dropdown-menu" id="menu-change-kernel-submenu"><li id="kernel-submenu-conda-root-py"><a href="#">Python [conda root]</a></li><li id="kernel-submenu-python2"><a href="#">Python [default]</a></li></ul>
                        </li>
                    <li class="divider"></li>
<li id="conda_menu_item"><a href="#">Conda Packages</a></li>
<li><a id="conda_server_link" href="http://anaconda.org/" target="_blank">Visit <span id="conda_server_name">anaconda.org</span></a></li></ul>
                </li>
                <li class="dropdown"><a href="#" data-toggle="dropdown" class="dropdown-toggle">Widgets</a><ul id="widget-submenu" class="dropdown-menu"><li title="Rasterizes the current state of the widgets to the notebook as PNG images."><a href="#">Save notebook with snapshots</a></li><li title="Download the widget state as a JSON file"><a href="#">Download widget state</a></li><li title="Embed interactive widgets"><a href="#">Embed widgets</a></li></ul></li><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Help</a>
                    <ul id="help_menu" class="dropdown-menu">
                        
                        <li id="notebook_tour" title="A quick tour of the notebook user interface"><a href="#">User Interface Tour</a></li>
                        <li id="keyboard_shortcuts" title="Opens a tooltip with all keyboard shortcuts"><a href="#">Keyboard Shortcuts</a></li>
                        <li class="divider"></li>
                        

                        
                            
                                <li><a rel="noreferrer" href="http://nbviewer.ipython.org/github/ipython/ipython/blob/3.x/examples/Notebook/Index.ipynb" target="_blank" title="Opens in a new window">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Notebook Help
                                </a></li>
                            
                                <li><a rel="noreferrer" href="https://help.github.com/articles/markdown-basics/" target="_blank" title="Opens in a new window">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Markdown
                                </a></li>
                            
                            
                        
                        <li id="kernel-help-links" class="divider"></li><li><a target="_blank" title="Opens in a new window" href="http://docs.python.org/2.7?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>Python</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://ipython.org/documentation.html?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>IPython</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.scipy.org/doc/numpy/reference/?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>NumPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.scipy.org/doc/scipy/reference/?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>SciPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://matplotlib.org/contents.html?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>Matplotlib</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.sympy.org/latest/index.html?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>SymPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://pandas.pydata.org/pandas-docs/stable/?v=20170228092940"><i class="fa fa-external-link menu-icon pull-right"></i><span>pandas</span></a></li><li class="divider"></li>
                        <li title="About Jupyter Notebook"><a id="notebook_about" href="#">About</a></li>
                        
                    </ul>
                </li>
              </ul>
            </div>
        </div>
    </div>
</div>

<div id="maintoolbar" class="navbar">
  <div class="toolbar-inner navbar-inner navbar-nobg">
    <div id="maintoolbar-container" class="container toolbar"><div class="btn-group" id="save-notbook"><button class="btn btn-default" title="Save and Checkpoint" data-jupyter-action="jupyter-notebook:save-notebook"><i class="fa-save fa"></i></button></div><div class="btn-group" id="insert_above_below"><button class="btn btn-default" title="insert cell below" data-jupyter-action="jupyter-notebook:insert-cell-below"><i class="fa-plus fa"></i></button></div><div class="btn-group" id="cut_copy_paste"><button class="btn btn-default" title="cut selected cells" data-jupyter-action="jupyter-notebook:cut-cell"><i class="fa-cut fa"></i></button><button class="btn btn-default" title="copy selected cells" data-jupyter-action="jupyter-notebook:copy-cell"><i class="fa-copy fa"></i></button><button class="btn btn-default" title="paste cells below" data-jupyter-action="jupyter-notebook:paste-cell-below"><i class="fa-paste fa"></i></button></div><div class="btn-group" id="move_up_down"><button class="btn btn-default" title="move selected cells up" data-jupyter-action="jupyter-notebook:move-cell-up"><i class="fa-arrow-up fa"></i></button><button class="btn btn-default" title="move selected cells down" data-jupyter-action="jupyter-notebook:move-cell-down"><i class="fa-arrow-down fa"></i></button></div><div class="btn-group" id="run_int"><button class="btn btn-default" title="run cell, select below" data-jupyter-action="jupyter-notebook:run-cell-and-select-next"><i class="fa-step-forward fa"></i></button><button class="btn btn-default" title="interrupt kernel" data-jupyter-action="jupyter-notebook:interrupt-kernel"><i class="fa-stop fa"></i></button><button class="btn btn-default" title="restart the kernel (with dialog)" data-jupyter-action="jupyter-notebook:confirm-restart-kernel"><i class="fa-repeat fa"></i></button></div><select id="cell_type" class="form-control select-xs"><option value="code" selected="selected">Code</option><option value="markdown">Markdown</option><option value="raw">Raw NBConvert</option><option value="heading">Heading</option><option value="multiselect" disabled="disabled" style="display: none;">-</option></select><div class="btn-group"><button class="btn btn-default" title="open the command palette" data-jupyter-action="jupyter-notebook:show-command-palette"><i class="fa-keyboard-o fa"></i></button></div><div class="btn-group"><button title="show new celltoolbar selector location" class="btn btn-default">CellToolbar</button></div><div class="btn-group"><button class="btn btn-default" title="Publish your notebook into Anaconda.org" id="publish_notebook"><i class="fa-cloud-upload fa"></i></button><button class="btn btn-default hide" title="Visit your notebook" id="visit_notebook"><i class="fa-cloud fa"></i></button></div><div class="btn-group"><button class="btn btn-default" title="Edit Presentation" id="nbp-app-btn"><i class="fa-gift fa"></i></button><button class="btn btn-default" title="Show Presentation" id="nbp-present-btn"><i class="fa-youtube-play fa"></i></button></div></div>
  </div>
</div>
</div>

<div class="lower-header-bar"></div>

</div>

<div id="site" style="height: 517px; display: block;">


<div id="ipython-main-app">
    <div id="notebook_panel">
        <div id="notebook" tabindex="-1"><div class="container" id="notebook-container"><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59999px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 52px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 21.0333px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-header cm-header-2">## Project 3: Open Street Map</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-header cm-header-3">### Author: Denis Rudolf</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 52px;"></div><div class="CodeMirror-gutters" style="display: none; height: 67px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Project-3:-Open-Street-Map">Project 3: Open Street Map<a class="anchor-link" href="#Project-3:-Open-Street-Map">¶</a></h2>
<h3 id="Author:-Denis-Rudolf">Author: Denis Rudolf<a class="anchor-link" href="#Author:-Denis-Rudolf">¶</a></h3>
</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59999px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 79px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>Some words about the data. I downloaded an OSM XML file where a part of Western Germany is mapped (Düsseldorf area, latitude between 51.16696° and 51.23432°, longitude between 6.64838° and  6.87130°). The OSM file size is 230.532 MB. I would like to work with more data but for the auditing and cleaning step with xml.etree.cElementTree my RAM of 8 GB is not sufficient.<span class="cm-trailing-space-a"> </span><span class="cm-trailing-space-b"> </span><span class="cm-trailing-space-a"> </span><span class="cm-trailing-space-new-line"> </span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 79px;"></div><div class="CodeMirror-gutters" style="display: none; height: 94px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Some
 words about the data. I downloaded an OSM XML file where a part of 
Western Germany is mapped (Düsseldorf area, latitude between 51.16696° 
and 51.23432°, longitude between 6.64838° and  6.87130°). The OSM file 
size is 230.532 MB. I would like to work with more data but for the 
auditing and cleaning step with xml.etree.cElementTree my RAM of 8 GB is
 not sufficient.    </p>
</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.60001px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 166px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 18.8333px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-header cm-header-4">#### Step 1: Auditing and cleaning of the data</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>First, I checked street names for non-alphanumeric strings. I found some street names with non-alphanumeric values but most of them were correct (validated by Internet research). I corrected the incorrect ones on OSM. Then, I audited the postcodes and found them to be correct by cross-checking with Google maps. Then, I audited and cleaned the phone numbers putting them all in the same format (example: +4921311520). I also created a contact dictionary with the keys phone, fax and website. I also set all the values for the key = wheelchair to be lower case. Furthermore, I noticed that there is a key = fixme or key = FIXME (see program output, partly in German), but this has to be addressed for each case separately.<span class="cm-trailing-space-a"> </span><span class="cm-trailing-space-b"> </span><span class="cm-trailing-space-a"> </span><span class="cm-trailing-space-b"> </span><span class="cm-trailing-space-new-line"> </span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 166px;"></div><div class="CodeMirror-gutters" style="display: none; height: 181px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h4 id="Step-1:-Auditing-and-cleaning-of-the-data">Step 1: Auditing and cleaning of the data<a class="anchor-link" href="#Step-1:-Auditing-and-cleaning-of-the-data">¶</a></h4>
<p>First, I checked street names for non-alphanumeric strings. I found 
some street names with non-alphanumeric values but most of them were 
correct (validated by Internet research). I corrected the incorrect ones
 on OSM. Then, I audited the postcodes and found them to be correct by 
cross-checking with Google maps. Then, I audited and cleaned the phone 
numbers putting them all in the same format (example: +4921311520). I 
also created a contact dictionary with the keys phone, fax and website. I
 also set all the values for the key = wheelchair to be lower case. 
Furthermore, I noticed that there is a key = fixme or key = FIXME (see 
program output, partly in German), but this has to be addressed for each
 case separately.     </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[24]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 1348.6px; left: 156.8px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 691.8px; margin-bottom: -15px; border-right-width: 15px; min-height: 1371px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 151.2px; top: 1343px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">xml</span>.<span class="cm-variable">etree</span>.<span class="cm-variable">cElementTree</span> <span class="cm-keyword">as</span> <span class="cm-variable">ET</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">from</span> <span class="cm-variable">collections</span> <span class="cm-keyword">import</span> <span class="cm-variable">defaultdict</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">re</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">pprint</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">OSMFILE</span> = <span class="cm-string">"map_Duesseldorf_Neuss.osm"</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">problemchars_streetname</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r'[=\+\&amp;&lt;&gt;;\"\?%#$@\,\t\r\n]'</span>, <span class="cm-variable">re</span>.<span class="cm-variable">IGNORECASE</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">problemchars_phone</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r'[=\/&amp;&lt;&gt;;\'"\?%#$@\,\.\t\r\n]'</span>, <span class="cm-variable">re</span>.<span class="cm-variable">IGNORECASE</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">phone_re</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r"\+49|0049"</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">phone_re_0049</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r"0049"</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">non_digits_re</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r"\D"</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">fixme_re</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r'fixme'</span>, <span class="cm-variable">re</span>.<span class="cm-variable">IGNORECASE</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">fixme_list</span> =[]</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">audit_street</span>(<span class="cm-variable">street_name</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">m</span> = <span class="cm-variable">problemchars_streetname</span>.<span class="cm-variable">search</span>(<span class="cm-variable">street_name</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">if</span> <span class="cm-variable">m</span>:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">print</span> <span class="cm-string">u"Problem with the street name: {}"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">street_name</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">return</span> <span class="cm-variable">street_name</span>    </span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">audit_postcode</span>(<span class="cm-variable">postcode</span>): </span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">postcode</span> = <span class="cm-builtin">int</span>(<span class="cm-variable">postcode</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">if</span> <span class="cm-variable">postcode</span> <span class="cm-operator">&gt;</span> <span class="cm-number">41564</span> <span class="cm-keyword">or</span> <span class="cm-variable">postcode</span> <span class="cm-operator">&lt;</span> <span class="cm-number">40210</span>:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">print</span> <span class="cm-string">u"Problem with the postcode: {}"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">postcode</span>)   </span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">return</span> <span class="cm-variable">postcode</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">audit_is_wheelchair</span>(<span class="cm-variable">is_wheelchair</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">mapping</span> = {<span class="cm-string">"Yes"</span>:<span class="cm-string">"yes"</span>, <span class="cm-string">"No"</span>:<span class="cm-string">"no"</span>, <span class="cm-string">"Limited"</span>: <span class="cm-string">"limited"</span>}</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">if</span> <span class="cm-builtin">set</span>([<span class="cm-variable">is_wheelchair</span>]) <span class="cm-operator">&lt;</span> <span class="cm-builtin">set</span>([<span class="cm-string">"Yes"</span>, <span class="cm-string">"No"</span>, <span class="cm-string">"Limited"</span>]):</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">return</span> <span class="cm-variable">mapping</span>[<span class="cm-variable">is_wheelchair</span>]</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">return</span> <span class="cm-variable">is_wheelchair</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">audit_phone_number</span>(<span class="cm-variable">phone</span>): </span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># remove hyphons</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">phone</span> = <span class="cm-string">""</span>.<span class="cm-variable">join</span>(<span class="cm-variable">phone</span>.<span class="cm-variable">split</span>(<span class="cm-string">"-"</span>)[:])</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># remove white spaces</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">phone</span> = <span class="cm-string">""</span>.<span class="cm-variable">join</span>(<span class="cm-variable">phone</span>.<span class="cm-variable">split</span>()[:])</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># remove slashes</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">phone</span> = <span class="cm-string">""</span>.<span class="cm-variable">join</span>(<span class="cm-variable">phone</span>.<span class="cm-variable">split</span>(<span class="cm-string">r"/"</span>)[:])</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># check if the country code is there</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">if</span> <span class="cm-variable">phone_re</span>.<span class="cm-variable">search</span>(<span class="cm-variable">phone</span>):</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># take only the first phone number if there are more than one</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">m</span> = <span class="cm-variable">problemchars_phone</span>.<span class="cm-variable">search</span>(<span class="cm-variable">phone</span>)</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-variable">m</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">char</span> = <span class="cm-variable">m</span>.<span class="cm-variable">group</span>()</span></pre><pre class=" CodeMirror-line "><span>          <span class="cm-comment cm-error">#  print "Problem character: " + char</span></span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">return</span> <span class="cm-variable">phone</span>.<span class="cm-variable">split</span>(<span class="cm-variable">char</span>)[<span class="cm-number">0</span>]</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">elif</span> <span class="cm-variable">phone_re_0049</span>.<span class="cm-variable">search</span>(<span class="cm-variable">phone</span>):</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">return</span> <span class="cm-string">"+49"</span><span class="cm-operator">+</span> <span class="cm-variable">phone</span>.<span class="cm-variable">strip</span>(<span class="cm-string">"0049"</span>)</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">return</span> <span class="cm-variable">phone</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">elif</span> <span class="cm-variable">non_digits_re</span>.<span class="cm-variable">search</span>(<span class="cm-variable">phone</span>):</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">return</span> <span class="cm-builtin">None</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">return</span> <span class="cm-string">"+49"</span> <span class="cm-operator">+</span> <span class="cm-variable">phone</span>.<span class="cm-variable">strip</span>(<span class="cm-string">"0"</span>)</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">audit_fixme</span>(<span class="cm-variable">fixme</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">fixme_list</span>.<span class="cm-variable">append</span>(<span class="cm-variable">fixme</span>)</span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">audit</span>(<span class="cm-variable">osmfile</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">osm_file</span> = <span class="cm-builtin">open</span>(<span class="cm-variable">osmfile</span>, <span class="cm-string">"r"</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">for</span> <span class="cm-variable">event</span>, <span class="cm-variable">elem</span> <span class="cm-keyword">in</span> <span class="cm-variable">ET</span>.<span class="cm-variable">iterparse</span>(<span class="cm-variable">osm_file</span>, <span class="cm-variable">events</span>=(<span class="cm-string">"start"</span>,)):</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-variable">elem</span>.<span class="cm-variable">tag</span> <span class="cm-operator">==</span> <span class="cm-string">"node"</span> <span class="cm-keyword">or</span> <span class="cm-variable">elem</span>.<span class="cm-variable">tag</span> <span class="cm-operator">==</span> <span class="cm-string">"way"</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">for</span> <span class="cm-variable">tag</span> <span class="cm-keyword">in</span> <span class="cm-variable">elem</span>.<span class="cm-builtin">iter</span>(<span class="cm-string">"tag"</span>):</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'k'</span>] <span class="cm-operator">==</span> <span class="cm-string">"addr:street"</span>:</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">audit_street</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'v'</span>])</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'k'</span>] <span class="cm-operator">==</span> <span class="cm-string">"addr:postcode"</span>:    </span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">audit_postcode</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'v'</span>])</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'k'</span>] <span class="cm-operator">==</span> <span class="cm-string">"phone"</span>:</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">audit_phone_number</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'v'</span>]) </span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-variable">fixme_re</span>.<span class="cm-variable">search</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'k'</span>]):</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">audit_fixme</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">'v'</span>])    </span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">osm_file</span>.<span class="cm-variable">close</span>()</span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">if</span> <span class="cm-variable">__name__</span> <span class="cm-operator">==</span> <span class="cm-string">'__main__'</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">audit</span>(<span class="cm-variable">OSMFILE</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 1371px;"></div><div class="CodeMirror-gutters" style="display: none; height: 1386px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[53]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.60001px; left: 358.4px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 633px; margin-bottom: -15px; border-right-width: 15px; min-height: 62px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 352.8px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The number of key=fixme or key=FIXME is {}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">fixme_list</span>))</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'Here are 10 examples: \n'</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">pprint</span>.<span class="cm-variable">pprint</span>(<span class="cm-variable">fixme_list</span>[<span class="cm-number">0</span>:<span class="cm-number">10</span>])</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 62px;"></div><div class="CodeMirror-gutters" style="display: none; height: 77px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The number of key=fixme or key=FIXME is 1672.
Here are 10 examples: 

['Exact position - are the connections correct?',
 'name of exit',
 'exact position',
 'Warnton?',
 u'zu busrelationen hinzuf\xfcgen',
 'name of exit',
 'Am Bahnsteigdach befestigt',
 u'Welche Gastst\xe4tten sind da aktuell?',
 'auch Bushaltestelle?',
 'opening_hours']
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59985px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 45px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>The following code is for data auditing, cleaning, inserting into the data model and to store the data in the json file. It is build upon the Udacity excercise in the case study.</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 45px;"></div><div class="CodeMirror-gutters" style="display: none; height: 60px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>The
 following code is for data auditing, cleaning, inserting into the data 
model and to store the data in the json file. It is build upon the 
Udacity excercise in the case study.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[&nbsp;]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 379.6px; left: 207.2px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 717px; margin-bottom: -15px; border-right-width: 15px; min-height: 2544px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 201.6px; top: 374px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-comment">#!/usr/bin/env python</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-comment"># -*- coding: utf-8 -*-</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">xml</span>.<span class="cm-variable">etree</span>.<span class="cm-variable">cElementTree</span> <span class="cm-keyword">as</span> <span class="cm-variable">ET</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">pprint</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">re</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">codecs</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">json</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">lower</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r'^([a-z]|_)*$'</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">lower_colon</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r'^([a-z]|_)*:([a-z]|_)*$'</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">problemchars</span> = <span class="cm-variable">re</span>.<span class="cm-builtin">compile</span>(<span class="cm-string">r'[=\&amp;&lt;&gt;;\'"\?%#$@\,\.\t\r\n]'</span>)</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">CREATED</span> = [ <span class="cm-string">"version"</span>, <span class="cm-string">"changeset"</span>, <span class="cm-string">"timestamp"</span>, <span class="cm-string">"user"</span>, <span class="cm-string">"uid"</span>]</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">shape_element</span>(<span class="cm-variable">element</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">node</span> = {}</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">if</span> <span class="cm-variable">element</span>.<span class="cm-variable">tag</span> <span class="cm-operator">==</span> <span class="cm-string">"node"</span> <span class="cm-keyword">or</span> <span class="cm-variable">element</span>.<span class="cm-variable">tag</span> <span class="cm-operator">==</span> <span class="cm-string">"way"</span> :</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># get the list of keys of the "node"/"way" dict</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">keys</span> = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>.<span class="cm-variable">keys</span>()</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># define the sub-dictionary </span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">dic_created</span> = {}</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">dic_address</span> = {}</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">dic_contact</span> = {}</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">dic_created</span>.<span class="cm-variable">fromkeys</span>(<span class="cm-variable">CREATED</span>)</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">_type</span> = <span class="cm-variable">element</span>.<span class="cm-variable">tag</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># check the existence of the keys</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-builtin">set</span>([<span class="cm-string">"id"</span>, <span class="cm-string">"changeset"</span>,<span class="cm-string">"user"</span>,<span class="cm-string">"version"</span>,<span class="cm-string">"uid"</span>,<span class="cm-string">"timestamp"</span>]) <span class="cm-operator">&lt;=</span> <span class="cm-builtin">set</span>(<span class="cm-variable">keys</span>):</span></pre><pre class=" CodeMirror-line "><span>           <span class="cm-comment cm-error"># print element.attrib</span></span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">_id</span> = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"id"</span>]</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">dic_created</span>[<span class="cm-string">"changeset"</span>] = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"changeset"</span>]</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">dic_created</span>[<span class="cm-string">"user"</span>] = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"user"</span>]</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">dic_created</span>[<span class="cm-string">"version"</span>] = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"version"</span>]</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">dic_created</span>[<span class="cm-string">"uid"</span>] = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"uid"</span>]</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">dic_created</span>[<span class="cm-string">"timestamp"</span>] = <span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"timestamp"</span>]</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">node</span> = {<span class="cm-string">"id"</span>:<span class="cm-variable">_id</span>, <span class="cm-string">"general_type"</span>: <span class="cm-variable">_type</span>, <span class="cm-string">"created"</span>: <span class="cm-variable">dic_created</span> }</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-builtin">set</span>([<span class="cm-string">"lat"</span>, <span class="cm-string">"lon"</span>]) <span class="cm-operator">&lt;=</span> <span class="cm-builtin">set</span>(<span class="cm-variable">keys</span>):</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">lat</span> = <span class="cm-builtin">float</span>(<span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"lat"</span>])</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">lon</span> = <span class="cm-builtin">float</span>(<span class="cm-variable">element</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"lon"</span>])</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">node</span>[<span class="cm-string">"pos"</span>] = [<span class="cm-variable">lon</span>,<span class="cm-variable">lat</span>]</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># for ways: make a list of node refs</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-variable">element</span>.<span class="cm-variable">tag</span> <span class="cm-operator">==</span> <span class="cm-string">"way"</span>:   </span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">node_refs</span> = []</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">for</span> <span class="cm-variable">tag</span> <span class="cm-keyword">in</span> <span class="cm-variable">element</span>.<span class="cm-builtin">iter</span>(<span class="cm-string">"nd"</span>):</span></pre><pre class=" CodeMirror-line "><span>               <span class="cm-comment cm-error"># print "Key: {}, Value: {}".format(tag.attrib["k"],tag.attrib["v"])  </span></span></pre><pre class=" CodeMirror-line "><span>               <span class="cm-comment"># print tag.attrib["ref"]</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-variable">node_refs</span>.<span class="cm-variable">append</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"ref"</span>]) </span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">node</span>[<span class="cm-string">"node_refs"</span>] = <span class="cm-variable">node_refs</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># iterate over the tags</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">for</span> <span class="cm-variable">tag</span> <span class="cm-keyword">in</span> <span class="cm-variable">element</span>.<span class="cm-builtin">iter</span>(<span class="cm-string">"tag"</span>):</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-comment"># select tags with one colon  </span></span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">if</span> <span class="cm-variable">lower_colon</span>.<span class="cm-variable">search</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"k"</span>]):</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-variable">colon_list</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"k"</span>].<span class="cm-variable">split</span>(<span class="cm-string">":"</span>)</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-comment"># create an address dict </span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-variable">colon_list</span>[<span class="cm-number">0</span>] <span class="cm-operator">==</span> <span class="cm-string">"addr"</span>:</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">address_type</span> = <span class="cm-variable">colon_list</span>[<span class="cm-number">1</span>]</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># audit and clean the street name if necessary</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">if</span> <span class="cm-variable">address_type</span> <span class="cm-operator">==</span> <span class="cm-string">"street"</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">address_value</span> = <span class="cm-variable">audit_street</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>])</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># audit and clean the postcode if necessary    </span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">elif</span> <span class="cm-variable">address_type</span> <span class="cm-operator">==</span> <span class="cm-string">"postcode"</span>:  </span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">address_value</span> = <span class="cm-variable">audit_postcode</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>])</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">address_value</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># ignore values with problematic characters</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># if not is_problemchars(address_value):</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">dic_address</span>[<span class="cm-variable">address_type</span>] = <span class="cm-variable">address_value</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-comment"># create a contact dict</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">elif</span> <span class="cm-variable">colon_list</span>[<span class="cm-number">0</span>] <span class="cm-operator">==</span> <span class="cm-string">"contact"</span>:</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">contact_type</span> = <span class="cm-variable">colon_list</span>[<span class="cm-number">1</span>]</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># audit and clean the street name if necessary</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">if</span> <span class="cm-variable">contact_type</span> <span class="cm-operator">==</span> <span class="cm-string">"phone"</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">contact_value</span> = <span class="cm-variable">audit_phone_number</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>])</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># audit and clean the postcode if necessary    </span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">elif</span> <span class="cm-variable">contact_type</span> <span class="cm-operator">==</span> <span class="cm-string">"fax"</span>:  </span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">contact_value</span> = <span class="cm-variable">audit_phone_number</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>])</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">elif</span> <span class="cm-variable">contact_type</span> <span class="cm-operator">==</span> <span class="cm-string">"website"</span>:  </span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">contact_value</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">elif</span> <span class="cm-variable">contact_type</span> <span class="cm-operator">==</span> <span class="cm-string">"email"</span>:  </span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">contact_value</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]    </span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">contact_value</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># ignore values with problematic characters</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># if not is_problemchars(address_value):</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">dic_contact</span>[<span class="cm-variable">contact_type</span>] = <span class="cm-variable">contact_value</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-comment"># other cases with colon but without "addr"</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">else</span>:                   </span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">value</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-comment"># ignore values with problematic characters</span></span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">if</span> <span class="cm-keyword">not</span> <span class="cm-variable">is_problemchars</span>(<span class="cm-variable">value</span>):</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">s</span> = <span class="cm-string">" "</span></span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">key_string</span> = <span class="cm-variable">s</span>.<span class="cm-variable">join</span>(<span class="cm-variable">colon_list</span>)   </span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">node</span>[<span class="cm-variable">key_string</span>] = <span class="cm-variable">value</span>                    </span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-comment"># select tags with lower case </span></span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">if</span> <span class="cm-variable">lower</span>.<span class="cm-variable">search</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"k"</span>]): </span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-variable">key</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"k"</span>]</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-variable">value</span> = <span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-comment"># ignore values with problematic characters</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-keyword">not</span> <span class="cm-variable">is_problemchars</span>(<span class="cm-variable">value</span>):</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">if</span> <span class="cm-variable">key</span> <span class="cm-operator">==</span> <span class="cm-string">"phone"</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-comment"># print key</span></span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">node</span>[<span class="cm-variable">key</span>] = <span class="cm-variable">audit_phone_number</span>(<span class="cm-variable">value</span>)</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">elif</span> <span class="cm-variable">key</span> <span class="cm-operator">==</span> <span class="cm-string">"wheelchair"</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">node</span>[<span class="cm-variable">key</span>] = <span class="cm-variable">audit_is_wheelchair</span>(<span class="cm-variable">value</span>)</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>                        <span class="cm-variable">node</span>[<span class="cm-variable">key</span>] = <span class="cm-variable">value</span>  </span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-comment"># print problematic characters</span></span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">if</span> <span class="cm-variable">is_problemchars</span>(<span class="cm-variable">tag</span>.<span class="cm-variable">attrib</span>[<span class="cm-string">"v"</span>]):</span></pre><pre class=" CodeMirror-line "><span>               <span class="cm-comment cm-error"># print tag.attrib["v"]</span></span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">pass</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># insert the address and contact dict into the node dict</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-variable">dic_address</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">node</span>[<span class="cm-string">"address"</span>] = <span class="cm-variable">dic_address</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-variable">dic_contact</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">node</span>[<span class="cm-string">"contact"</span>] = <span class="cm-variable">dic_contact</span></span></pre><pre class=" CodeMirror-line "><span>       </span></pre><pre class=" CodeMirror-line "><span><span class="cm-null cm-error">        </span><span class="cm-keyword">return</span> <span class="cm-variable">node</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">return</span> <span class="cm-builtin">None</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">is_problemchars</span>(<span class="cm-variable">string</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">return</span> <span class="cm-builtin">bool</span>(<span class="cm-variable">problemchars</span>.<span class="cm-variable">search</span>(<span class="cm-variable">string</span>))</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">process_map</span>(<span class="cm-variable">file_in</span>, <span class="cm-variable">pretty</span> = <span class="cm-builtin">False</span>):</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># You do not need to change this file</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">file_out</span> = <span class="cm-string">"{0}.json"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">file_in</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">data</span> = []</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">with</span> <span class="cm-variable">codecs</span>.<span class="cm-builtin">open</span>(<span class="cm-variable">file_out</span>, <span class="cm-string">"w"</span>) <span class="cm-keyword">as</span> <span class="cm-variable">fo</span>:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">for</span> <span class="cm-variable">_</span>, <span class="cm-variable">element</span> <span class="cm-keyword">in</span> <span class="cm-variable">ET</span>.<span class="cm-variable">iterparse</span>(<span class="cm-variable">file_in</span>):</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-variable">el</span> = <span class="cm-variable">shape_element</span>(<span class="cm-variable">element</span>)</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">if</span> <span class="cm-variable">el</span>:</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-variable">data</span>.<span class="cm-variable">append</span>(<span class="cm-variable">el</span>)</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">if</span> <span class="cm-variable">pretty</span>:</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">fo</span>.<span class="cm-variable">write</span>(<span class="cm-variable">json</span>.<span class="cm-variable">dumps</span>(<span class="cm-variable">el</span>, <span class="cm-variable">indent</span>=<span class="cm-number">2</span>)<span class="cm-operator">+</span><span class="cm-string">"\n"</span>)</span></pre><pre class=" CodeMirror-line "><span>                <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>                    <span class="cm-variable">fo</span>.<span class="cm-variable">write</span>(<span class="cm-variable">json</span>.<span class="cm-variable">dumps</span>(<span class="cm-variable">el</span>) <span class="cm-operator">+</span> <span class="cm-string">"\n"</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">return</span> <span class="cm-variable">data</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">test</span>():</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># NOTE: if you are running this code on your computer, with a larger dataset, </span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># call the process_map procedure with pretty=False. The pretty=True option adds </span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-comment"># additional spaces to the output, making it significantly larger.</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">data</span> = <span class="cm-variable">process_map</span>(<span class="cm-string">'map_Duesseldorf_Neuss.osm'</span>)</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">print</span> <span class="cm-string">"Number of dictionaries: {}"</span>.<span class="cm-builtin">format</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">data</span>))</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">pprint</span>.<span class="cm-variable">pprint</span>(<span class="cm-variable">data</span>[<span class="cm-number">0</span>:<span class="cm-number">9</span>])</span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">if</span> <span class="cm-variable">__name__</span> <span class="cm-operator">==</span> <span class="cm-string">"__main__"</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">test</span>()</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 2544px;"></div><div class="CodeMirror-gutters" style="display: none; height: 2559px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.60001px; left: 541.267px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 69px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 15px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 81px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 535.667px; top: 0px; height: 18.8333px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-header cm-header-4">#### Step 2: Inserting the data into Mongo DB and querying the database</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>I inserted the json file 'map_Duesseldorf_Neuss.osm.json' in the database OSM as a collection map_Duesseldorf_Neuss.</span></pre><pre class=" CodeMirror-line "><span>Let's have a look at the number of documents, nodes and ways first.</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 81px;"></div><div class="CodeMirror-gutters" style="display: none; height: 96px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h4 id="Step-2:-Inserting-the-data-into-Mongo-DB-and-querying-the-database">Step 2: Inserting the data into Mongo DB and querying the database<a class="anchor-link" href="#Step-2:-Inserting-the-data-into-Mongo-DB-and-querying-the-database">¶</a></h4>
<p>I inserted the json file 'map_Duesseldorf_Neuss.osm.json' in the database OSM as a collection map_Duesseldorf_Neuss.
Let's have a look at the number of documents, nodes and ways first.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[2]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 90.6px; left: 232.4px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 633px; margin-bottom: -15px; border-right-width: 15px; min-height: 249px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 226.8px; top: 85px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-keyword">from</span> <span class="cm-variable">pymongo</span> <span class="cm-keyword">import</span> <span class="cm-variable">MongoClient</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">pprint</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">client</span> = <span class="cm-variable">MongoClient</span>(<span class="cm-string">'localhost:27017'</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">db</span> = <span class="cm-variable">client</span>.<span class="cm-variable">OSM</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-comment"># some simple queries</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">size</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">find</span>().<span class="cm-variable">count</span>()</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">"The number of documents is {}."</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">size</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">num_nodes</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">find</span>({<span class="cm-string">"general_type"</span>: <span class="cm-string">"node"</span>}).<span class="cm-variable">count</span>()</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">"The number of nodes is {}."</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">num_nodes</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">num_ways</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">find</span>({<span class="cm-string">"general_type"</span>: <span class="cm-string">"way"</span>}).<span class="cm-variable">count</span>()</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">"The number of ways is {}."</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">num_ways</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 249px;"></div><div class="CodeMirror-gutters" style="display: none; height: 264px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to scroll output; double click to hide"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The number of documents is 971624.
The number of nodes is 817709.
The number of ways is 153915.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59961px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>Now, let's count the number if users.</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Now, let's count the number if users.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[8]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 22.6px; left: 114.8px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 591px; margin-bottom: -15px; border-right-width: 15px; min-height: 130px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 109.2px; top: 17px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$created.user'</span>,}}</span></pre><pre class=" CodeMirror-line "><span>            ]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result_list</span> = []</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">while</span> <span class="cm-variable">result</span>.<span class="cm-variable">alive</span> <span class="cm-operator">==</span> <span class="cm-builtin">True</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">result_list</span>.<span class="cm-variable">append</span>(<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>())</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The number of unique users is {}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">result_list</span>))    </span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 130px;"></div><div class="CodeMirror-gutters" style="display: none; height: 145px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The number of unique users is 1009.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.6001px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>Who are the most contributing users?</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Who are the most contributing users?</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[9]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 22.6px; left: 308px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 473.4px; margin-bottom: -15px; border-right-width: 15px; min-height: 113px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 302.4px; top: 17px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$created.user'</span>,</span></pre><pre class=" CodeMirror-line "><span>                              <span class="cm-string">'count'</span>: {<span class="cm-string">'$sum'</span>: <span class="cm-number">1</span> }  }},</span></pre><pre class=" CodeMirror-line "><span>            </span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$sort'</span>: {<span class="cm-string">'count'</span>: <span class="cm-operator">-</span><span class="cm-number">1</span>}}]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span>[<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>() <span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-number">0</span>,<span class="cm-number">10</span>)] </span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 113px;"></div><div class="CodeMirror-gutters" style="display: none; height: 128px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[9]:</div><div class="output_subarea output_text output_result"><pre>[{u'_id': u'black_bike', u'count': 262745},
 {u'_id': u'EinKonstanzer', u'count': 102627},
 {u'_id': u'rurseekatze', u'count': 93824},
 {u'_id': u'Antikalk', u'count': 92611},
 {u'_id': u'rabenkind', u'count': 91562},
 {u'_id': u'Sharlin', u'count': 55791},
 {u'_id': u'Athemis', u'count': 43618},
 {u'_id': u'j-e-d', u'count': 27520},
 {u'_id': u'mighty_eighty', u'count': 23296},
 {u'_id': u'Zyras', u'count': 21703}]</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.6001px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>These were absolute numbers. I'm also interested in the percentage of contributed documents per user.<span class="cm-trailing-space-a"> </span><span class="cm-trailing-space-new-line"> </span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>These were absolute numbers. I'm also interested in the percentage of contributed documents per user.  </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[54]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 39.6px; left: 316.4px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 910.2px; margin-bottom: -15px; border-right-width: 15px; min-height: 232px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 310.8px; top: 34px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$created.user'</span>,</span></pre><pre class=" CodeMirror-line "><span>                              <span class="cm-string">'count'</span>: {<span class="cm-string">'$sum'</span>: <span class="cm-number">1</span> }  }},</span></pre><pre class=" CodeMirror-line "><span>             {<span class="cm-string">'$project'</span>: {<span class="cm-string">'ratio'</span>: {<span class="cm-string">'$divide'</span>:[<span class="cm-string">'$count'</span>, <span class="cm-number">1e-2</span><span class="cm-operator">*</span><span class="cm-variable">size</span>]}}},</span></pre><pre class=" CodeMirror-line "><span>            </span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$sort'</span>: {<span class="cm-string">'ratio'</span>: <span class="cm-operator">-</span><span class="cm-number">1</span>}}]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result_list</span> = [<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>() <span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-number">0</span>,<span class="cm-number">10</span>)] </span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">pprint</span>.<span class="cm-variable">pprint</span>(<span class="cm-variable">result_list</span>)</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">elem_sum</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">for</span> <span class="cm-variable">elem</span> <span class="cm-keyword">in</span> <span class="cm-variable">result_list</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">elem_sum</span> = <span class="cm-variable">elem_sum</span> <span class="cm-operator">+</span> <span class="cm-variable">elem</span>[<span class="cm-string">'ratio'</span>]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'\n Top 10 users contribute {0:.2f} % to the OSM for the Neuss/Duesseldorf area.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">elem_sum</span>)    </span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 232px;"></div><div class="CodeMirror-gutters" style="display: none; height: 247px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>[{u'_id': u'black_bike', u'ratio': 27.041839229990202},
 {u'_id': u'EinKonstanzer', u'ratio': 10.562419207430034},
 {u'_id': u'rurseekatze', u'ratio': 9.65641029863404},
 {u'_id': u'Antikalk', u'ratio': 9.531567766955119},
 {u'_id': u'rabenkind', u'ratio': 9.42360419256832},
 {u'_id': u'Sharlin', u'ratio': 5.742036013931315},
 {u'_id': u'Athemis', u'ratio': 4.489185116876487},
 {u'_id': u'j-e-d', u'ratio': 2.8323713699949775},
 {u'_id': u'mighty_eighty', u'ratio': 2.3976352992515624},
 {u'_id': u'Zyras', u'ratio': 2.233682988481141}]

Top 10 users contribute 83.91 % to the OSM for the Neuss/Duesseldorf area.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.6001px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 45px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.0003px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>The conclusion here is similar to the sample MongoDB project that top 10 users contribute 83.91 % of the documents. Because I'm a selfish person I will also query for the number of my contributions (it could be more).<span class="cm-trailing-space-a"> </span><span class="cm-trailing-space-new-line"> </span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 45px;"></div><div class="CodeMirror-gutters" style="display: none; height: 60px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>The
 conclusion here is similar to the sample MongoDB project that top 10 
users contribute 83.91 % of the documents. Because I'm a selfish person I
 will also query for the number of my contributions (it could be more). 
 </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[55]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 39.6px; left: 140px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 473.4px; margin-bottom: -15px; border-right-width: 15px; min-height: 130px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 134.4px; top: 34px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$created.user'</span>,</span></pre><pre class=" CodeMirror-line "><span>                              <span class="cm-string">'count'</span>: {<span class="cm-string">'$sum'</span>: <span class="cm-number">1</span> }  }},</span></pre><pre class=" CodeMirror-line "><span>            {<span class="cm-string">'$match'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'DenisRudolf'</span>}}</span></pre><pre class=" CodeMirror-line "><span>            ]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">while</span> <span class="cm-variable">result</span>.<span class="cm-variable">alive</span> <span class="cm-operator">==</span> <span class="cm-builtin">True</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">print</span> <span class="cm-variable">result</span>.<span class="cm-builtin">next</span>()</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 130px;"></div><div class="CodeMirror-gutters" style="display: none; height: 145px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>{u'count': 7, u'_id': u'DenisRudolf'}
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 39.6px; left: 308px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 75px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 15px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 62px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 302.4px; top: 34px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>Next, I'm constructing the geospatial index (2d sphere) in order to be able to make a query with the '<span class="cm-delimit cm-delimit-open">$</span>geoNear' operator. I'm interested in the number of key = fixme or key = FIXME being close to our house (lat 51.22085, lon 6.65236), i.e. within a radius of about 10 km (maxDistance = 1.5e-3 rad). </span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 62px;"></div><div class="CodeMirror-gutters" style="display: none; height: 77px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Next,
 I'm constructing the geospatial index (2d sphere) in order to be able 
to make a query with the '$geoNear' operator. I'm interested in the 
number of key = fixme or key = FIXME being close to our house (lat 
51.22085, lon 6.65236), i.e. within a radius of about 10 km (maxDistance
 = 1.5e-3 rad). </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[57]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 39.6px; left: 173.6px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 498.6px; margin-bottom: -15px; border-right-width: 15px; min-height: 62px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 168px; top: 34px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-keyword">from</span> <span class="cm-variable">pymongo</span> <span class="cm-keyword">import</span> <span class="cm-variable">GEOSPHERE</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">from</span> <span class="cm-variable">bson</span>.<span class="cm-variable">son</span> <span class="cm-keyword">import</span> <span class="cm-variable">SON</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">create_index</span>([(<span class="cm-string">"pos"</span>, <span class="cm-variable">GEOSPHERE</span>)])</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 62px;"></div><div class="CodeMirror-gutters" style="display: none; height: 77px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[57]:</div><div class="output_subarea output_text output_result"><pre>u'pos_2dsphere'</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[58]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 90.6px; left: 114.8px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 927px; margin-bottom: -15px; border-right-width: 15px; min-height: 198px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 109.2px; top: 85px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-comment"># our house</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">coord</span> = [<span class="cm-number">6.65236</span>,<span class="cm-number">51.22085</span>]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$geoNear'</span>:{ <span class="cm-string">'distanceField'</span>: <span class="cm-string">'pos'</span>,<span class="cm-string">'near'</span>: <span class="cm-variable">coord</span>, <span class="cm-string">'spherical'</span>: <span class="cm-builtin">True</span>, </span></pre><pre class=" CodeMirror-line "><span>                             <span class="cm-string">'query'</span>: { <span class="cm-string">'fixme'</span>: {<span class="cm-string">'$exists'</span>: <span class="cm-number">1</span>}}, <span class="cm-string">'maxDistance'</span>: <span class="cm-number">1.5e-3</span>, </span></pre><pre class=" CodeMirror-line "><span>                             <span class="cm-string">'distanceField'</span>: <span class="cm-string">'dist.calculated'</span>}}</span></pre><pre class=" CodeMirror-line "><span>            ]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result_list</span> = []</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">while</span> <span class="cm-variable">result</span>.<span class="cm-variable">alive</span> <span class="cm-operator">==</span> <span class="cm-builtin">True</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">result_list</span>.<span class="cm-variable">append</span>(<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>())</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The number of dictionaries with key = fixme or key = FIXME is {}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">result_list</span>))            </span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 198px;"></div><div class="CodeMirror-gutters" style="display: none; height: 213px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The number of dictionaries with key = fixme or key = FIXME is 100.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.60001px; left: 316.4px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 37px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 15px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 310.8px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>Now, I want to retrieve the minimum and maximum longitude and latitude coordinates and to calculate the area.</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Now, I want to retrieve the minimum and maximum longitude and latitude coordinates and to calculate the area.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[14]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 107.6px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 817.8px; margin-bottom: -15px; border-right-width: 15px; min-height: 674px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 0px; top: 102px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">lat_max</span> = <span class="cm-number">60.0</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">lat_min</span> = <span class="cm-number">45.0</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">lon_max</span> = <span class="cm-number">10.0</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">lon_min</span> = <span class="cm-number">5.0</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">get_pipeline</span>(<span class="cm-variable">v_min</span>, <span class="cm-variable">v_max</span>, <span class="cm-variable">sort</span>):</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">min_datetime</span> = <span class="cm-string">'2016-01-01T00:00:00Z'</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">version</span> = <span class="cm-string">'1'</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># gets values of pos between v_min and v_max with timestamp greater than min_datetime</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># and with version greater than 1</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># and with an address dict</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-comment"># sort = -1: descending, sort = 1: ascending</span></span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$unwind'</span>: <span class="cm-string">'$pos'</span>},</span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$match'</span>: {<span class="cm-string">'$and'</span>:</span></pre><pre class=" CodeMirror-line "><span>                            [{<span class="cm-string">'pos'</span>: {<span class="cm-string">'$lt'</span>: <span class="cm-variable">v_max</span>}}, {<span class="cm-string">'pos'</span>: {<span class="cm-string">'$gt'</span>: <span class="cm-variable">v_min</span>}} ]}},</span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$match'</span>: {<span class="cm-string">'created.timestamp'</span>: {<span class="cm-string">'$gt'</span>: <span class="cm-variable">min_datetime</span>}}},</span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$match'</span>: {<span class="cm-string">'created.version'</span>: {<span class="cm-string">'$gt'</span>: <span class="cm-variable">version</span>}, <span class="cm-string">'address'</span>: {<span class="cm-string">'$exists'</span>: <span class="cm-number">1</span>} }},   </span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$project'</span>: {<span class="cm-string">'pos'</span>:<span class="cm-string">'$pos'</span>, <span class="cm-string">'address'</span>:<span class="cm-string">'$address'</span>}},</span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$sort'</span>: {<span class="cm-string">'pos'</span>: <span class="cm-variable">sort</span>}}</span></pre><pre class=" CodeMirror-line "><span>                ]</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">return</span> <span class="cm-variable">pipeline</span></span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">get_min_max_coord</span>(<span class="cm-variable">v_min</span>, <span class="cm-variable">v_max</span>):</span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">for</span> <span class="cm-variable">sort</span> <span class="cm-keyword">in</span> [<span class="cm-operator">-</span><span class="cm-number">1</span>,<span class="cm-number">1</span>]:</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">result_list</span> = []</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">pipeline</span> = <span class="cm-variable">get_pipeline</span>(<span class="cm-variable">v_min</span>, <span class="cm-variable">v_max</span>,<span class="cm-variable">sort</span>)</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>, <span class="cm-variable">allowDiskUse</span> = <span class="cm-builtin">True</span> )</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-variable">result_list</span> = [<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>() <span class="cm-keyword">for</span> <span class="cm-variable">i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-number">0</span>,<span class="cm-number">1</span>)]</span></pre><pre class=" CodeMirror-line "><span>       <span class="cm-comment cm-error"># pprint.pprint(result_list) </span></span></pre><pre class=" CodeMirror-line "><span>        </span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">if</span> <span class="cm-variable">sort</span> <span class="cm-operator">==</span> <span class="cm-operator">-</span><span class="cm-number">1</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">print</span> <span class="cm-string">'The max value {0:.5f}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">result_list</span>[<span class="cm-number">0</span>][<span class="cm-string">'pos'</span>])</span></pre><pre class=" CodeMirror-line "><span>        <span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span>            <span class="cm-keyword">print</span> <span class="cm-string">'The min value {0:.5f}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">result_list</span>[<span class="cm-number">0</span>][<span class="cm-string">'pos'</span>])</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">get_min_max_coord</span>(<span class="cm-variable">lat_min</span>, <span class="cm-variable">lat_max</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">get_min_max_coord</span>(<span class="cm-variable">lon_min</span>, <span class="cm-variable">lon_max</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 674px;"></div><div class="CodeMirror-gutters" style="display: none; height: 689px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The max value 51.23432.
The min value 51.16696.
The max value 6.87130.
The min value 6.64838.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[15]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 124.6px; left: 39.2px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 927px; margin-bottom: -15px; border-right-width: 15px; min-height: 300px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 33.6px; top: 119px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">def</span> <span class="cm-def">get_distance</span>(<span class="cm-variable">lat_1</span>, <span class="cm-variable">lat_2</span>, <span class="cm-variable">lon_1</span>, <span class="cm-variable">lon_2</span>):</span></pre><pre class=" CodeMirror-line "><span><span class="cm-comment"># all in km and radians   </span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">coords</span> = <span class="cm-variable">np</span>.<span class="cm-variable">pi</span><span class="cm-operator">/</span><span class="cm-number">180.0</span><span class="cm-operator">*</span><span class="cm-variable">np</span>.<span class="cm-variable">array</span>([<span class="cm-variable">lat_1</span>, <span class="cm-variable">lat_2</span>, <span class="cm-variable">lon_1</span>, <span class="cm-variable">lon_2</span>])</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">R</span> = <span class="cm-number">6371.0</span></span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-keyword">return</span> <span class="cm-number">2.0</span><span class="cm-operator">*</span><span class="cm-variable">R</span><span class="cm-operator">*</span><span class="cm-variable">np</span>.<span class="cm-variable">arcsin</span>(<span class="cm-variable">np</span>.<span class="cm-variable">sqrt</span>( <span class="cm-variable">np</span>.<span class="cm-variable">sin</span>(<span class="cm-number">0.5</span><span class="cm-operator">*</span>(<span class="cm-variable">coords</span>[<span class="cm-number">1</span>]<span class="cm-operator">-</span><span class="cm-variable">coords</span>[<span class="cm-number">0</span>]))<span class="cm-operator">**</span><span class="cm-number">2</span> <span class="cm-operator">+</span> <span class="cm-variable">np</span>.<span class="cm-variable">cos</span>(<span class="cm-variable">coords</span>[<span class="cm-number">0</span>])<span class="cm-operator">*</span><span class="cm-variable">np</span>.<span class="cm-variable">cos</span>(<span class="cm-variable">coords</span>[<span class="cm-number">1</span>])</span></pre><pre class=" CodeMirror-line "><span>                                   <span class="cm-operator">*</span><span class="cm-variable">np</span>.<span class="cm-variable">sin</span>(<span class="cm-number">0.5</span><span class="cm-operator">*</span>(<span class="cm-variable">coords</span>[<span class="cm-number">3</span>]<span class="cm-operator">-</span><span class="cm-variable">coords</span>[<span class="cm-number">2</span>]))<span class="cm-operator">**</span><span class="cm-number">2</span> )) </span></pre><pre class=" CodeMirror-line "><span><span class="cm-comment"># five decimal places = 1 m accuracy</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">d_south_north</span> = <span class="cm-variable">get_distance</span>(<span class="cm-number">51.16696</span>,<span class="cm-number">51.23432</span>,<span class="cm-number">6.64838</span>,<span class="cm-number">6.64838</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">d_west_east</span> = <span class="cm-variable">get_distance</span>(<span class="cm-number">51.23432</span>,<span class="cm-number">51.23432</span>,<span class="cm-number">6.64838</span>,<span class="cm-number">6.87130</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">area</span> = <span class="cm-variable">d_south_north</span><span class="cm-operator">*</span><span class="cm-variable">d_west_east</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The south-north distance is {0:.3f} km.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">d_south_north</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The west-east distance is {0:.3f} km.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">d_west_east</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The total area is {0:.3f} km^2.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">area</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 300px;"></div><div class="CodeMirror-gutters" style="display: none; height: 315px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The south-north distance is 7.490 km.
The west-east distance is 15.520 km.
The total area is 116.249 km^2.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.6001px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>How many pharmacies are on the map?</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>How many pharmacies are on the map?</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[59]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 192.6px; left: 308px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 784.2px; margin-bottom: -15px; border-right-width: 15px; min-height: 232px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 302.4px; top: 187px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$amenity'</span>,</span></pre><pre class=" CodeMirror-line "><span>                              <span class="cm-string">'count'</span>: {<span class="cm-string">'$sum'</span>: <span class="cm-number">1</span> }  }},</span></pre><pre class=" CodeMirror-line "><span>             {<span class="cm-string">'$match'</span>: {<span class="cm-string">'_id'</span>: <span class="cm-string">'pharmacy'</span>}},</span></pre><pre class=" CodeMirror-line "><span>            </span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$sort'</span>: {<span class="cm-string">'count'</span>: <span class="cm-operator">-</span><span class="cm-number">1</span>}}</span></pre><pre class=" CodeMirror-line "><span>           ]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result_list</span> = []</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">while</span> <span class="cm-variable">result</span>.<span class="cm-variable">alive</span> <span class="cm-operator">==</span> <span class="cm-builtin">True</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">result_list</span>.<span class="cm-variable">append</span>(<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>()) </span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The number of pharmacies on the map is {}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">result_list</span>[<span class="cm-number">0</span>][<span class="cm-string">'count'</span>])</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'The average number of pharmacies per km^2 is {}.'</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">result_list</span>[<span class="cm-number">0</span>][<span class="cm-string">'count'</span>]<span class="cm-operator">/</span><span class="cm-variable">area</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 232px;"></div><div class="CodeMirror-gutters" style="display: none; height: 247px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>The number of pharmacies on the map is 124.
The average number of pharmacies per km^2 is 1.06667351055.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59961px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>How many amenties have an access for a wheelchair and which ones?</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>How many amenties have an access for a wheelchair and which ones?</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[46]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59961px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 15px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="display: block; right: 0px; left: 0px;"><div style="height: 100%; min-height: 1px; width: 1213px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true" style="height: 15px; width: 15px;"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 1212.6px; margin-bottom: -15px; border-right-width: 15px; min-height: 317px; padding-right: 0px; padding-bottom: 15px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = [{<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$wheelchair'</span>,</span></pre><pre class=" CodeMirror-line "><span>                              <span class="cm-string">'count'</span>: {<span class="cm-string">'$sum'</span>: <span class="cm-number">1</span> }  }},            </span></pre><pre class=" CodeMirror-line "><span>                {<span class="cm-string">'$sort'</span>: {<span class="cm-string">'count'</span>: <span class="cm-operator">-</span><span class="cm-number">1</span>}}</span></pre><pre class=" CodeMirror-line "><span>           ]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result_list</span> = []</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">while</span> <span class="cm-variable">result</span>.<span class="cm-variable">alive</span> <span class="cm-operator">==</span> <span class="cm-builtin">True</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">result_list</span>.<span class="cm-variable">append</span>(<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>()) </span></pre><pre class=" CodeMirror-line "><span>    </span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">pprint</span>.<span class="cm-variable">pprint</span>(<span class="cm-variable">result_list</span>[:])</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">elem_sum</span> = <span class="cm-number">0.0</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">for</span> <span class="cm-variable">elem</span> <span class="cm-keyword">in</span> <span class="cm-variable">result_list</span>[<span class="cm-number">1</span>:]:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">elem_sum</span> = <span class="cm-variable">elem_sum</span> <span class="cm-operator">+</span> <span class="cm-variable">elem</span>[<span class="cm-string">'count'</span>]</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'\n'</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'{0: .2f} % of the amenities with a wheelchair value have a wheelchair access.'</span>.<span class="cm-builtin">format</span>(<span class="cm-number">100.0</span><span class="cm-operator">*</span><span class="cm-variable">result_list</span>[<span class="cm-number">1</span>][<span class="cm-string">'count'</span>]<span class="cm-operator">/</span><span class="cm-variable">elem_sum</span>) </span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'{0: .2f} % of the amenities with a wheelchair value don\'t have a wheelchair access.'</span>.<span class="cm-builtin">format</span>(<span class="cm-number">100.0</span><span class="cm-operator">*</span><span class="cm-variable">result_list</span>[<span class="cm-number">2</span>][<span class="cm-string">'count'</span>]<span class="cm-operator">/</span><span class="cm-variable">elem_sum</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'For {0: .2f} % of the amenities with a wheelchair value the wheelchair access is limited.'</span>.<span class="cm-builtin">format</span>(<span class="cm-number">100.0</span><span class="cm-operator">*</span><span class="cm-variable">result_list</span>[<span class="cm-number">3</span>][<span class="cm-string">'count'</span>]<span class="cm-operator">/</span><span class="cm-variable">elem_sum</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'For {0: .2f} % of the amenities with a wheelchair value the wheelchair access is unknown.'</span>.<span class="cm-builtin">format</span>(<span class="cm-number">100.0</span><span class="cm-operator">*</span><span class="cm-variable">result_list</span>[<span class="cm-number">4</span>][<span class="cm-string">'count'</span>]<span class="cm-operator">/</span><span class="cm-variable">elem_sum</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 332px;"></div><div class="CodeMirror-gutters" style="display: none; height: 347px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>[{u'_id': None, u'count': 968150},
 {u'_id': u'yes', u'count': 1673},
 {u'_id': u'no', u'count': 977},
 {u'_id': u'limited', u'count': 805},
 {u'_id': u'unknown', u'count': 19}]


 48.16 % of the amenities with a wheelchair value have a wheelchair access.
 28.12 % of the amenities with a wheelchair value don't have a wheelchair access.
For  23.17 % of the amenities with a wheelchair value the wheelchair access is limited.
For  0.55 % of the amenities with a wheelchair value the wheelchair access is unknown.
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59961px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 28px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span>The city should definitely do more for the the wheelchair users.</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 43px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>The city should definitely do more for the the wheelchair users.</p>
</div></div></div><div class="cell code_cell rendered selected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[51]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython CodeMirror-focused"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 73.6px; left: 106.4px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 607.8px; margin-bottom: -15px; border-right-width: 15px; min-height: 215px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 100.8px; top: 68px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-variable">pipeline</span> = <span class=" CodeMirror-matchingbracket">[</span>{<span class="cm-string">'$match'</span>: { <span class="cm-string">'wheelchair'</span>: <span class="cm-string">'yes'</span>, <span class="cm-string">'amenity'</span>:{<span class="cm-string">'$exists'</span>:<span class="cm-number">1</span>}}},</span></pre><pre class=" CodeMirror-line "><span>            {<span class="cm-string">'$group'</span>: { <span class="cm-string">'_id'</span>: <span class="cm-string">'$amenity'</span>,</span></pre><pre class=" CodeMirror-line "><span>                       <span class="cm-string">'count'</span>: {<span class="cm-string">'$sum'</span>: <span class="cm-number">1</span> }}},</span></pre><pre class=" CodeMirror-line "><span>            {<span class="cm-string">'$sort'</span>: {<span class="cm-string">'count'</span>: <span class="cm-operator">-</span><span class="cm-number">1</span>}}</span></pre><pre class=" CodeMirror-line "><span>           <span class=" CodeMirror-matchingbracket">]</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result</span> = <span class="cm-variable">db</span>.<span class="cm-variable">map_Duesseldorf_Neuss</span>.<span class="cm-variable">aggregate</span>(<span class="cm-variable">pipeline</span>)</span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">result_list</span> = []</span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">while</span> <span class="cm-variable">result</span>.<span class="cm-variable">alive</span> <span class="cm-operator">==</span> <span class="cm-builtin">True</span>:</span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-variable">result_list</span>.<span class="cm-variable">append</span>(<span class="cm-variable">result</span>.<span class="cm-builtin">next</span>()) </span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span class="cm-keyword">print</span> <span class="cm-string">'Top ten of amenities with a wheelchair access.'</span>     </span></pre><pre class=" CodeMirror-line "><span><span class="cm-variable">pprint</span>.<span class="cm-variable">pprint</span>(<span class="cm-variable">result_list</span>[<span class="cm-number">0</span>:<span class="cm-number">10</span>])  </span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 215px;"></div><div class="CodeMirror-gutters" style="display: none; height: 230px;"></div></div></div></div></div></div><div class="widget-area connection-problems" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div style="" class="out_prompt_overlay prompt" title="click to expand output; double click to hide output"></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tope ten of amenities with a wheelchair access.
[{u'_id': u'parking', u'count': 98},
 {u'_id': u'pharmacy', u'count': 49},
 {u'_id': u'restaurant', u'count': 48},
 {u'_id': u'bank', u'count': 47},
 {u'_id': u'fast_food', u'count': 46},
 {u'_id': u'toilets', u'count': 42},
 {u'_id': u'cafe', u'count': 25},
 {u'_id': u'pub', u'count': 20},
 {u'_id': u'fuel', u'count': 14},
 {u'_id': u'post_office', u'count': 14}]
</pre></div></div></div><div style="display: none;" class="btn btn-default output_collapsed" title="click to expand output">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59999px; left: 623.75px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 30px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 30px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 618.15px; top: 0px; height: 18.8333px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-header cm-header-4">#### </span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">font</span> <span class="cm-attribute">color</span>=<span class="cm-string">'red'</span><span class="cm-tag cm-bracket">&gt;</span>   Suggestions for improving and analyzing the data</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 30px;"></div><div class="CodeMirror-gutters" style="display: none; height: 45px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h4 id="---Suggestions-for-improving-and-analyzing-the-data"><font color="red">   Suggestions for improving and analyzing the data</font><a class="anchor-link" href="#---Suggestions-for-improving-and-analyzing-the-data">¶</a></h4>
</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 56.6px; left: 408.8px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"> e.g.</textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 106px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 79px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 403.2px; top: 51px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">font</span> <span class="cm-attribute">color</span>=<span class="cm-string">'red'</span><span class="cm-tag cm-bracket">&gt;</span> I see at least three problems in and with the dataset. The first one is that the values inserted by the OSM users are not standardized, which results in an undesired variety of data formats. During the data cleaning process, for instance, I saw different formats of phone data: '0049 2131 775239', '+49 2131 775239', '+49 (0)2131 775239' or '02131-775239'. Also the way how e.g. opening times are stored is rather messy. Hier an example</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 79px;"></div><div class="CodeMirror-gutters" style="display: none; height: 94px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><font color="red">
 I see at least three problems in and with the dataset. The first one is
 that the values inserted by the OSM users are not standardized, which 
results in an undesired variety of data formats. During the data 
cleaning process, for instance, I saw different formats of phone data: 
'0049 2131 775239', '+49 2131 775239', '+49 (0)2131 775239' or 
'02131-775239'. Also the way how e.g. opening times are stored is rather
 messy. Hier an example
</font></p></div></div></div><div class="cell text_cell unrendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 175.6px; left: 224px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 300px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 218.4px; top: 170px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">node</span> <span class="cm-attribute">id</span>=<span class="cm-string">"4024283014"</span> <span class="cm-attribute">lat</span>=<span class="cm-string">"51.2012348"</span> <span class="cm-attribute">lon</span>=<span class="cm-string">"6.6914372"</span> <span class="cm-attribute">version</span>=<span class="cm-string">"1"</span> <span class="cm-attribute">timestamp</span>=<span class="cm-string">"2016-02-24T20:53:45Z"</span> <span class="cm-attribute">changeset</span>=<span class="cm-string">"37421800"</span> <span class="cm-attribute">uid</span>=<span class="cm-string">"141931"</span> <span class="cm-attribute">user</span>=<span class="cm-string">"Sharlin"</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:city"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Neuss"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:country"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"DE"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:housenumber"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"18"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:postcode"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"41460"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:street"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"RheinstraÃŸe"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:email"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"verkehrslenkung@stadt.neuss.de"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:fax"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"+49 2131 90-2490"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:phone"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"+49 2131 90-3901"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:website"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"</span><span class="cm-string cm-link">http://www.neuss.de/"</span><span class="cm-tag cm-bracket cm-link">/</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"name"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Amt fÃ¼r Verkehrsangelegenheiten"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"office"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"administrative"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"opening_hours"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Mo-We 08:00-16:00; Tu 08:00-18:00; Fr 08:00-12:30"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"operator"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Stadt Neuss"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"ref"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"69"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>  <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">node</span><span class="cm-tag cm-bracket">&gt;</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 300px;"></div><div class="CodeMirror-gutters" style="display: none; height: 315px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Type <em>Markdown</em> and LaTeX: <span class="MathJax_Preview" style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-6-Frame" tabindex="0" style="position: relative;" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msup&gt;&lt;mi&gt;&amp;#x03B1;&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/math&gt;" role="presentation"><nobr aria-hidden="true"><span class="math" id="MathJax-Span-26" role="math" style="width: 1.173em; display: inline-block;"><span style="display: inline-block; position: relative; width: 0.962em; height: 0px; font-size: 120%;"><span style="position: absolute; clip: rect(1.21em, 1000.96em, 2.447em, -1000em); top: -2.244em; left: 0em;"><span class="mrow" id="MathJax-Span-27"><span class="msubsup" id="MathJax-Span-28"><span style="display: inline-block; position: relative; width: 0.981em; height: 0px;"><span style="position: absolute; clip: rect(3.341em, 1000.55em, 4.178em, -1000em); top: -3.974em; left: 0em;"><span class="mi" id="MathJax-Span-29" style="font-family: STIXMathJax_Main; font-style: italic;">α</span><span style="display: inline-block; width: 0px; height: 3.974em;"></span></span><span style="position: absolute; top: -4.337em; left: 0.552em;"><span class="mn" id="MathJax-Span-30" style="font-size: 70.7%; font-family: STIXMathJax_Main;">2</span><span style="display: inline-block; width: 0px; height: 3.974em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 2.244em;"></span></span></span><span style="display: inline-block; overflow: hidden; vertical-align: -0.09em; border-left: 0px solid; width: 0px; height: 1.176em;"></span></span></nobr><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mi>α</mi><mn>2</mn></msup></math></span></span><script type="math/tex" id="MathJax-Element-6">\alpha^2</script></p>
</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 158.6px; left: 182.4px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 230px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 181px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 142.8px; top: 153px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -34px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">font</span> <span class="cm-attribute">color</span>=<span class="cm-string">'red'</span><span class="cm-tag cm-bracket">&gt;</span> To sove this problem, I think, more standardization from the side of OSM , especially for the values, is required. The second problem that I see are many fixme keys. Some issues like inserting relations, opening hours and bus stations can be fixed sitting behind the computer by internet search. Other issues like exact GPS coordinates require in-the-field activity (i.e. going to the place and measureing the GPS coordinates).</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -34px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class=" CodeMirror-line "><span>The third problem is checking the validity of the data, e.g. the the validity of existing GPS coordinates. This require user engagement, which, as pointed out in the sample project, can be stimulated by gamification elements. On the other hand, GPS traces from e.g. Pokemon Go'ers, hobby runners and bikers, vehicle fleets etc. can be potentially used to enrich and cross-check the existent dataset. Also Google Maps can be used as a reference though an automated cross-check with Google Maps is difficult, I believe, because the data are not available as e.g. XML files. Here is the summary of my reasoning.                </span></pre></div></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 181px;"></div><div class="CodeMirror-gutters" style="height: 196px; left: 0px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 33px;"></div></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><font color="red">
 To sove this problem, I think, more standardization from the side of 
OSM , especially for the values, is required. The second problem that I 
see are many fixme keys. Some issues like inserting relations, opening 
hours and bus stations can be fixed sitting behind the computer by 
internet search. Other issues like exact GPS coordinates require 
in-the-field activity (i.e. going to the place and measureing the GPS 
coordinates).
The third problem is checking the validity of the data, e.g. the the 
validity of existing GPS coordinates. This require user engagement, 
which, as pointed out in the sample project, can be stimulated by 
gamification elements. On the other hand, GPS traces from e.g. Pokemon 
Go'ers, hobby runners and bikers, vehicle fleets etc. can be potentially
 used to enrich and cross-check the existent dataset. Also Google Maps 
can be used as a reference though an automated cross-check with Google 
Maps is difficult, I believe, because the data are not available as e.g.
 XML files. Here is the summary of my reasoning.                
</font></p></div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 175.6px; left: 408.8px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 71px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 198px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 403.2px; top: 170px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">font</span> <span class="cm-attribute">color</span>=<span class="cm-string">'red'</span><span class="cm-tag cm-bracket">&gt;</span> __Problem: values inserted by users are not standerized__</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Solution: standarization of input values by OSM__</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Benefits__:</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>- better for database queries</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Anticipated Problems__:</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>- not all cases can be covered by standardization</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 198px;"></div><div class="CodeMirror-gutters" style="display: none; height: 213px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><font color="red"> <strong>Problem: values inserted by users are not standerized</strong>
</font></p><p><font color="red"><strong>Solution: standarization of input values by OSM</strong></font></p><font color="red">
<p><strong>Benefits</strong>:</p>
<ul>
<li>better for database queries</li>
</ul>
<p><strong>Anticipated Problems</strong>:</p>
<ul>
<li>not all cases can be covered by standardization</li>
</ul>
</font><p></p></div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 141.6px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 52px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 164px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 0px; top: 136px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">font</span> <span class="cm-attribute">color</span>=<span class="cm-string">'red'</span><span class="cm-tag cm-bracket">&gt;</span> __Problem: large amount of fixme keys__</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Solution: __internet search, in-the-field activity</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Benefits__:</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>- improves the dataset quality</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 164px;"></div><div class="CodeMirror-gutters" style="display: none; height: 179px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><font color="red"> <strong>Problem: large amount of fixme keys</strong>
</font></p><p><font color="red"><strong>Solution: </strong>internet search, in-the-field activity</font></p><font color="red">
<p><strong>Benefits</strong>:</p>
<ul>
<li>improves the dataset quality</li>
</ul>
</font><p></p></div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 90.6px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 103px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 266px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 0px; top: 85px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">font</span> <span class="cm-attribute">color</span>=<span class="cm-string">'red'</span><span class="cm-tag cm-bracket">&gt;</span> __Problem: Are the present OSM data correct?__</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Solution: user audits (motivation with gamification elements), GPS traces from different soures (e.g. vehicle fleets) and Google Map data for validation of present OSM data __</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Benefits__:</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>- improves the dataset quality</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>__Anticipated Problems__:</span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span>- requires user engagament</span></pre><pre class=" CodeMirror-line "><span>- legal issues (privacy, licences, etc.)</span></pre><pre class=" CodeMirror-line "><span>- technical feasibility</span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 266px;"></div><div class="CodeMirror-gutters" style="display: none; height: 281px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><font color="red"> <strong>Problem: Are the present OSM data correct?</strong>
</font></p><p><font color="red"><strong>Solution: user audits 
(motivation with gamification elements), GPS traces from different 
soures (e.g. vehicle fleets) and Google Map data for validation of 
present OSM data </strong></font></p><font color="red">
<p><strong>Benefits</strong>:</p>
<ul>
<li>improves the dataset quality</li>
</ul>
<p><strong>Anticipated Problems</strong>:</p>
<ul>
<li>requires user engagament</li>
<li>legal issues (privacy, licences, etc.)</li>
<li>technical feasibility</li>
</ul>
</font><p></p></div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 260.6px; left: 198.8px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 181px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 317px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 193.2px; top: 255px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">node</span> <span class="cm-attribute">id</span>=<span class="cm-string">"4024283014"</span> <span class="cm-attribute">lat</span>=<span class="cm-string">"51.2012348"</span> <span class="cm-attribute">lon</span>=<span class="cm-string">"6.6914372"</span> <span class="cm-attribute">version</span>=<span class="cm-string">"1"</span> <span class="cm-attribute">timestamp</span>=<span class="cm-string">"2016-02-24T20:53:45Z"</span> <span class="cm-attribute">changeset</span>=<span class="cm-string">"37421800"</span> <span class="cm-attribute">uid</span>=<span class="cm-string">"141931"</span> <span class="cm-attribute">user</span>=<span class="cm-string">"Sharlin"</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:city"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Neuss"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:country"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"DE"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:housenumber"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"18"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:postcode"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"41460"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:street"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"RheinstraÃŸe"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:email"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"verkehrslenkung@stadt.neuss.de"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:fax"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"+49 2131 90-2490"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:phone"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"+49 2131 90-3901"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:website"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"</span><span class="cm-string cm-link">http://www.neuss.de/"</span><span class="cm-tag cm-bracket cm-link">/</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"name"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Amt fÃ¼r Verkehrsangelegenheiten"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"office"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"administrative"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"opening_hours"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Mo-We 08:00-16:00; Tu 08:00-18:00; Fr 08:00-12:30"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"operator"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Stadt Neuss"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"ref"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"69"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>  <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">node</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 317px;"></div><div class="CodeMirror-gutters" style="display: none; height: 332px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1">
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59999px; left: 5.59999px;"><textarea style="position: absolute; padding: 0px; width: 1px; height: 1em; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; display: block;"><div style="min-width: 1px; height: 181px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: -15px; border-right-width: 15px; min-height: 317px; padding-right: 15px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: medium none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" style=""><pre class=" CodeMirror-line "><span><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">node</span> <span class="cm-attribute">id</span>=<span class="cm-string">"4024283014"</span> <span class="cm-attribute">lat</span>=<span class="cm-string">"51.2012348"</span> <span class="cm-attribute">lon</span>=<span class="cm-string">"6.6914372"</span> <span class="cm-attribute">version</span>=<span class="cm-string">"1"</span> <span class="cm-attribute">timestamp</span>=<span class="cm-string">"2016-02-24T20:53:45Z"</span> <span class="cm-attribute">changeset</span>=<span class="cm-string">"37421800"</span> <span class="cm-attribute">uid</span>=<span class="cm-string">"141931"</span> <span class="cm-attribute">user</span>=<span class="cm-string">"Sharlin"</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:city"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Neuss"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:country"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"DE"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:housenumber"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"18"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:postcode"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"41460"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"addr:street"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"RheinstraÃŸe"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:email"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"verkehrslenkung@stadt.neuss.de"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:fax"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"+49 2131 90-2490"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:phone"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"+49 2131 90-3901"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"contact:website"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"</span><span class="cm-string cm-link">http://www.neuss.de/"</span><span class="cm-tag cm-bracket cm-link">/</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"name"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Amt fÃ¼r Verkehrsangelegenheiten"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"office"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"administrative"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"opening_hours"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Mo-We 08:00-16:00; Tu 08:00-18:00; Fr 08:00-12:30"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"operator"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"Stadt Neuss"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tag</span> <span class="cm-attribute">k</span>=<span class="cm-string">"ref"</span> <span class="cm-attribute">v</span>=<span class="cm-string">"69"</span><span class="cm-tag cm-bracket">/&gt;</span></span></pre><pre class=" CodeMirror-line "><span>  <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">node</span><span class="cm-tag cm-bracket">&gt;</span></span></pre><pre class=" CodeMirror-line "><span><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 15px; width: 1px; top: 317px;"></div><div class="CodeMirror-gutters" style="display: none; height: 332px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1">
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
</div></div></div></div><div class="end_space"></div></div>
        <div id="tooltip" class="ipython_tooltip" style="display:none"><div class="tooltipbuttons"><a href="#" role="button" class="ui-button"><span class="ui-icon ui-icon-close">Close</span></a><a href="#" class="ui-corner-all" role="button" id="expanbutton" title="Grow the tooltip vertically (press shift-tab twice)"><span class="ui-icon ui-icon-plus">Expand</span></a><a href="#" role="button" class="ui-button" title="show the current docstring in pager (press shift-tab 4 times)"><span class="ui-icon ui-icon-arrowstop-l-n">Open in Pager</span></a><a href="#" role="button" class="ui-button" title="Tooltip will linger for 10 seconds while you type" style="display: none;"><span class="ui-icon ui-icon-clock">Close</span></a></div><div class="pretooltiparrow"></div><div class="tooltiptext smalltooltip"></div></div>
    </div>
</div>



</div>



<div id="pager" class="ui-resizable">
    <div id="pager-contents">
        <div id="pager-container" class="container"></div>
    </div>
    <div id="pager-button-area"><a role="button" title="Open the pager in an external window" class="ui-button"><span class="ui-icon ui-icon-extlink"></span></a><a role="button" title="Close the pager" class="ui-button"><span class="ui-icon ui-icon-close"></span></a></div>
<div class="ui-resizable-handle ui-resizable-n" style="z-index: 90;"></div></div>






<script type="text/javascript">
    sys_info = {"os_name": "nt", "platform": "Windows-7-6.1.7601-SP1", "default_encoding": "cp850", "notebook_path": "D:\\Anaconda2\\lib\\site-packages\\notebook", "sys_platform": "win32", "sys_version": "2.7.12 |Anaconda 4.2.0 (64-bit)| (default, Jun 29 2016, 11:07:13) [MSC v.1500 64 bit (AMD64)]", "notebook_version": "4.2.3", "commit_source": "", "commit_hash": "", "sys_executable": "D:\\Anaconda2\\python.exe"};
</script>

<script src="OpenStreetMap-Rudolf-submission_files/encoding.js" charset="utf-8"></script>


    <script src="OpenStreetMap-Rudolf-submission_files/main_003.js" type="text/javascript" charset="utf-8"></script>






<div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px none; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px none; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-size-adjust: none; font-family: STIXMathJax_Main,sans-serif;"></div></div><div class="widget-modal-backdrop widget-modal-hidden"><div class="widget-modal-text"><i class="fa fa-cog fa-spin"></i><div>Rendering widgets...</div></div><div class="progress widget-modal-progress"><div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div></div></div><div class="nbp-app"><div class="nbp-app-bar btn-toolbar nbp-toolbar"><div class="btn-toolbar-group btn-group-vertical"><a class="btn btn-default btn-lg" title="Present"><i class="fa fa-fw fa-2x fa-youtube-play fa-2x"></i><label>Present</label></a></div><div class="btn-toolbar-group btn-group-vertical"><a class="btn btn-default btn-lg" title="Slides"><i class="fa fa-fw fa-2x fa-film fa-2x"></i><label>Slides</label></a></div><div class="btn-toolbar-group btn-group-vertical"><a class="btn btn-default btn-lg" title="Themes"><i class="fa fa-fw fa-2x fa-paint-brush fa-2x"></i><label>Themes</label></a></div><div class="btn-toolbar-group btn-group-vertical"><a class="btn btn-default btn-lg" title="Help"><i class="fa fa-fw fa-2x fa-question-circle fa-2x"></i><label>Help</label></a></div></div></div></body></html>